{"version":3,"sources":["Components/notify/Notify.jsx","pages/components/Contact.jsx"],"names":["Notify","props","id","text","Contact","useState","loading","setLoading","errInp","setErrInp","submitMail","e","a","preventDefault","name","target","value","from","email","subject","message","post_obj","validation","toast","error","axios","post","response","reset","status","success","data","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","className","onSubmit","type","autoComplete","placeholder","cols","rows","defaultValue"],"mappings":"4LAOeA,EAPA,SAACC,GACd,OACE,qBAAK,WAAS,UAAUC,GAAG,SAA3B,SACGD,EAAME,QCoIEC,UAjIC,WACd,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAU,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,yDACjBD,EAAEE,iBAEIC,EAAOH,EAAEI,OAAOD,KAAKE,MACrBC,EAAON,EAAEI,OAAOG,MAAMF,MACtBG,EAAUR,EAAEI,OAAOI,QAAQH,MAC3BI,EAAUT,EAAEI,OAAOK,QAAQJ,MAC3BK,EAAW,CACfP,OACAG,OACAE,UACAC,WAGS,gDAELE,EAAa,WACjB,OAAKR,EAIOG,EAIAE,IAIAC,IACVX,EAAU,WACVc,IAAMC,MAAM,iCACL,IANPf,EAAU,WACVc,IAAMC,MAAM,iCACL,IANPf,EAAU,SACVc,IAAMC,MAAM,+BACL,IANPD,IAAMC,MAAM,6BACZf,EAAU,SACH,IApBM,UAuCXa,IAvCW,wBAwCbf,GAAW,GAxCE,UAyCQkB,IAAMC,KA3BpB,gDA2B+BL,GAzCzB,QAyCTM,EAzCS,OA0CbpB,GAAW,GACXI,EAAEI,OAAOa,QACe,MAApBD,EAASE,QACXN,IAAMO,QAAQ,6BA7CH,0DAiDfvB,GAAW,GAEXgB,IAAMC,OAAM,2CAAOG,gBAAP,mBAAiBI,YAAjB,eAAuBP,QAAS,0BAnD7B,0DAAH,sDAuDhB,OACE,qCACE,cAAC,IAAD,CACEQ,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,IAGN/B,EAAU,cAAC,EAAD,CAAQH,KAAK,oBAAuB,KAC/C,yBAASD,GAAG,UAAUoC,UAAU,UAAhC,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAI,WAAS,cAAcA,UAAU,kBAArC,UACE,4CADF,QAGA,mBAAG,WAAS,cAAZ,4CACA,qBAAKA,UAAU,eAAf,SACE,sBAAK,WAAS,cAAc,iBAAgB,IAAKA,UAAU,OAA3D,UACE,mBAAGA,UAAU,oBACb,6CACA,iEAGJ,uBAAM,WAAS,cAAcC,SAAU7B,EAAvC,UACE,sBAAK4B,UAAU,aAAf,UACE,uBACEA,UAAsB,SAAX9B,EAAoB,WAAa,KAC5CgC,KAAK,OACLC,aAAa,OACb3B,KAAK,OACL4B,YAAY,cAEd,uBACEJ,UAAsB,UAAX9B,EAAqB,WAAa,KAC7CgC,KAAK,QACLC,aAAa,OACb3B,KAAK,QACL4B,YAAY,kBAGhB,sBAAKJ,UAAU,iBAAf,UACE,uBACEA,UAAsB,YAAX9B,EAAuB,WAAa,KAC/CgC,KAAK,OACLC,aAAa,OACb3B,KAAK,UACL4B,YAAY,iBAEd,0BACEJ,UAAsB,YAAX9B,EAAuB,WAAa,KAC/CM,KAAK,UACL6B,KAAM,GACNC,KAAM,GACNF,YAAY,eACZG,aAAc,QAGlB,qBAAKP,UAAU,cAAf,SACE,wBAAQE,KAAK,SAASF,UAAU,kBAAhC","file":"static/js/8.d6429329.chunk.js","sourcesContent":["const Notify = (props) => {\r\n  return (\r\n    <div aos-data=\"fade-up\" id=\"notify\">\r\n      {props.text}\r\n    </div>\r\n  );\r\n};\r\nexport default Notify;\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Notify from \"../../Components/notify/Notify\";\r\n\r\nconst Contact = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [errInp, setErrInp] = useState(\"\");\r\n  const submitMail = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const name = e.target.name.value;\r\n    const from = e.target.email.value;\r\n    const subject = e.target.subject.value;\r\n    const message = e.target.message.value;\r\n    const post_obj = {\r\n      name,\r\n      from,\r\n      subject,\r\n      message,\r\n    };\r\n    // console.log(post_obj);\r\n    let link = \"https://coderti-server.herokuapp.com/sendmail\";\r\n\r\n    const validation = () => {\r\n      if (!name) {\r\n        toast.error(\"Name input must be filled\");\r\n        setErrInp(\"name\");\r\n        return false;\r\n      } else if (!from) {\r\n        setErrInp(\"email\");\r\n        toast.error(\"Email input must be filled\");\r\n        return false;\r\n      } else if (!subject) {\r\n        setErrInp(\"subject\");\r\n        toast.error(\"Subject input must be filled\");\r\n        return false;\r\n      } else if (!message) {\r\n        setErrInp(\"message\");\r\n        toast.error(\"Message input must be filled\");\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    };\r\n    // console.log(validation());\r\n    try {\r\n      if (validation()) {\r\n        setLoading(true);\r\n        let response = await axios.post(link, post_obj);\r\n        setLoading(false);\r\n        e.target.reset();\r\n        if (response.status === 200) {\r\n          toast.success(\"Mail has sent to Coder TI\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      // console.dir(error);\r\n      toast.error(error?.response?.data?.error || \"Something Went Wrong !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n      />\r\n      {/* {loading ? toast.info(\"Sending\") : null} */}\r\n      {loading ? <Notify text=\"Sending mail...\" /> : null}\r\n      <section id=\"contact\" className=\"contact\">\r\n        <div className=\"container\">\r\n          <h1 data-aos=\"slide-right\" className=\"section_heading\">\r\n            <span>Contact </span>ME\r\n          </h1>\r\n          <p data-aos=\"slide-right\">Email or Send a Message for me</p>\r\n          <div className=\"card_wrapper\">\r\n            <div data-aos=\"slide-right\" data-aos-delay={400} className=\"card\">\r\n              <i className=\"fas fa-envelope\" />\r\n              <h1>Email ME At</h1>\r\n              <h6>coding.beast.404@gmail.com</h6>\r\n            </div>\r\n          </div>\r\n          <form data-aos=\"slide-right\" onSubmit={submitMail}>\r\n            <div className=\"input_wrap\">\r\n              <input\r\n                className={errInp === \"name\" ? \"invInput\" : null}\r\n                type=\"text\"\r\n                autoComplete=\"none\"\r\n                name=\"name\"\r\n                placeholder=\"Your Name\"\r\n              />\r\n              <input\r\n                className={errInp === \"email\" ? \"invInput\" : null}\r\n                type=\"email\"\r\n                autoComplete=\"none\"\r\n                name=\"email\"\r\n                placeholder=\"Your Email\"\r\n              />\r\n            </div>\r\n            <div className=\"input_wrap_two\">\r\n              <input\r\n                className={errInp === \"subject\" ? \"invInput\" : null}\r\n                type=\"text\"\r\n                autoComplete=\"none\"\r\n                name=\"subject\"\r\n                placeholder=\"Your Subject\"\r\n              />\r\n              <textarea\r\n                className={errInp === \"message\" ? \"invInput\" : null}\r\n                name=\"message\"\r\n                cols={30}\r\n                rows={10}\r\n                placeholder=\"Your Message\"\r\n                defaultValue={\"\"}\r\n              />\r\n            </div>\r\n            <div className=\"btn_wrapper\">\r\n              <button type=\"submit\" className=\"btn btn_primary\">\r\n                Send Message\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Contact;\r\n"],"sourceRoot":""}